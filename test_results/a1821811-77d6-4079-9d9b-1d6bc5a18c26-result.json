{"name": "test_buy_product", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "@allure.description(\"Test buy product\")\n    def test_buy_product():\n        options = webdriver.ChromeOptions()\n        options.add_experimental_option(\"detach\", True)\n        # options.add_argument(\"--headless\")\n        driver = webdriver.Chrome(options=options)\n    \n        print(\"Start Test\")\n    \n        login = MainPage(driver)\n        login.authorization()\n>       login.open_product_page()\n\ntests\\test_buy_product.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:94: in open_product_page\n    self.assert_url(self.product_page_url)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.main_page.MainPage object at 0x0000025CBA5C47A0>, result = 'https://zlatoz.ru/catalog/nozhi_ukrashennye_/'\n\n    def assert_url(self, result):\n        get_url = self.driver.current_url\n>       assert get_url == result\nE       AssertionError\n\nbase\\base_class.py:23: AssertionError"}, "description": "Test buy product", "steps": [{"name": "Authorization", "status": "passed", "start": 1713014606787, "stop": 1713014613615}], "attachments": [{"name": "stdout", "source": "f5fdf63b-2290-4f4d-bb6d-f709e2362ca6-attachment.txt", "type": "text/plain"}], "start": 1713014605180, "stop": 1713014613765, "uuid": "706c0c97-5b83-4c60-b20c-1b62c3c2cb21", "historyId": "22557127bd8e5c9d27d61f44787213b8", "testCaseId": "22557127bd8e5c9d27d61f44787213b8", "fullName": "tests.test_buy_product#test_buy_product", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "DESKTOP-9VF3JS6"}, {"name": "thread", "value": "12248-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_product"}]}