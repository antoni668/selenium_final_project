{"name": "test_buy_product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "@allure.description(\"Test buy product\")\n    def test_buy_product():\n        options = webdriver.ChromeOptions()\n        options.add_experimental_option(\"detach\", True)\n        # options.add_argument(\"--headless\")\n        driver = webdriver.Chrome(options=options)\n    \n        print(\"Start Test\")\n    \n        main = MainPage(driver)\n        main.authorization()\n        main.open_product_page()\n    \n        prod = ProductPage(driver)\n>       prod.select_product()\n\ntests\\test_buy_product.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\product_page.py:76: in select_product\n    self.click_add_to_cart_button()\npages\\product_page.py:60: in click_add_to_cart_button\n    self.get_add_to_cart_button().click()\npages\\product_page.py:41: in get_add_to_cart_button\n    return WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0fdcadb32d61f7d64a728235b5bec737\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000017245A6D620>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\anton\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Test buy product", "steps": [{"name": "Authorization", "status": "passed", "start": 1713031553228, "stop": 1713031559856}, {"name": "Open product page", "status": "passed", "start": 1713031559856, "stop": 1713031562534}, {"name": "Select product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\#MyProjects\\zlatoz_selenium\\pages\\product_page.py\", line 76, in select_product\n    self.click_add_to_cart_button()\n  File \"C:\\#MyProjects\\zlatoz_selenium\\pages\\product_page.py\", line 60, in click_add_to_cart_button\n    self.get_add_to_cart_button().click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\#MyProjects\\zlatoz_selenium\\pages\\product_page.py\", line 41, in get_add_to_cart_button\n    return WebDriverWait(self.driver, 10).until(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\anton\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1713031562534, "stop": 1713031574597}], "attachments": [{"name": "stdout", "source": "9665a7c4-6181-4e53-a637-5c2b2ae99aca-attachment.txt", "type": "text/plain"}], "start": 1713031550767, "stop": 1713031574598, "uuid": "91750557-5517-4560-add4-05b36f79ee70", "historyId": "22557127bd8e5c9d27d61f44787213b8", "testCaseId": "22557127bd8e5c9d27d61f44787213b8", "fullName": "tests.test_buy_product#test_buy_product", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "DESKTOP-9VF3JS6"}, {"name": "thread", "value": "8708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_product"}]}